// <auto-generated />
using System;
using DRP_API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DRP_API.Migrations
{
    [DbContext(typeof(CoreApiContext))]
    partial class CoreApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DRP_API.Models.Design", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_design");

                    b.ToTable("design", (string)null);
                });

            modelBuilder.Entity("DRP_API.Models.DesignRequiredInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int>("DesignId")
                        .HasColumnType("int")
                        .HasColumnName("design_id");

                    b.HasKey("Id")
                        .HasName("pk_design_required_inventory");

                    b.HasIndex("DesignId")
                        .HasDatabaseName("ix_design_required_inventory_design_id");

                    b.ToTable("design_required_inventory", (string)null);
                });

            modelBuilder.Entity("DRP_API.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("inventory_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<int>("Unit")
                        .HasColumnType("int")
                        .HasColumnName("unit");

                    b.HasKey("InventoryId")
                        .HasName("pk_inventory");

                    b.ToTable("inventory", (string)null);
                });

            modelBuilder.Entity("DRP_API.Models.Supply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<float>("Cost")
                        .HasColumnType("real")
                        .HasColumnName("cost");

                    b.Property<DateTime>("DateOrdered")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_ordered");

                    b.Property<DateTime>("DateReceived")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_received");

                    b.Property<string>("Info")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("info");

                    b.Property<int>("InventoryId")
                        .HasColumnType("int")
                        .HasColumnName("inventory_id");

                    b.HasKey("Id")
                        .HasName("pk_supply");

                    b.HasIndex("InventoryId")
                        .HasDatabaseName("ix_supply_inventory_id");

                    b.ToTable("supply", (string)null);
                });

            modelBuilder.Entity("DRP_API.Models.DesignRequiredInventory", b =>
                {
                    b.HasOne("DRP_API.Models.Design", "Design")
                        .WithMany("RequiredInventory")
                        .HasForeignKey("DesignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_design_required_inventory_design_design_id");

                    b.Navigation("Design");
                });

            modelBuilder.Entity("DRP_API.Models.Supply", b =>
                {
                    b.HasOne("DRP_API.Models.Inventory", "Inventory")
                        .WithMany("Supply")
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_supply_inventory_inventory_id");

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("DRP_API.Models.Design", b =>
                {
                    b.Navigation("RequiredInventory");
                });

            modelBuilder.Entity("DRP_API.Models.Inventory", b =>
                {
                    b.Navigation("Supply");
                });
#pragma warning restore 612, 618
        }
    }
}
